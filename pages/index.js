import { useEffect, useState } from "react";

export default function Home() {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetch("/api")
      .then((res) => res.json())
      .then((data) => {
        setData(data);
        setLoading(false);
      })
      .catch((err) => {
        setError(err);
        setLoading(false);
      });
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p>–û—à–∏–±–∫–∞: {error.message}</p>;
// –ù–∞–π–¥—ë–º –±–∞–ª–∞–Ω—Å –∏–º–µ–Ω–Ω–æ —Ç–æ–∫–µ–Ω–∞ uosmo (1 OSMO = 1_000_000 uosmo)
  const osmoBalanceRaw = data?.balances?.balances?.find(
    (b) => b.denom === "uosmo"
  )?.amount;

  const osmoBalance = osmoBalanceRaw
    ? (parseFloat(osmoBalanceRaw) / 1_000_000).toFixed(6)
    : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";

  return (
    <div>
      <h1>üí∞ –ë–∞–ª–∞–Ω—Å OSMO</h1>
      <p>{osmoBalance} OSMO</p>

      <h2>üõ† –û—Ç–ª–∞–¥–∫–∞</h2>
      <pre>{JSON.stringify(data, null, 2)}</pre>
    </div>
  );
}
import { useEffect, useState } from "react";

export default function Home() {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("/api/transactions")
      .then((res) => res.json())
      .then((data) => {
        setTransactions(data.tx_responses || []);
        setLoading(false);
      })
      .catch((err) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:", err);
        setLoading(false);
      });
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...</p>;

  return (
    <div>
      <h1>üì• –í—Ö–æ–¥—è—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h1>
      <ul>
        {transactions.map((tx) => (
          <li key={tx.txhash}>
            <strong>Hash:</strong> {tx.txhash}<br />
            <strong>Height:</strong> {tx.height}<br />
            <strong>Time:</strong> {tx.timestamp}<br />
            <strong>From:</strong>{" "}
            {tx.tx.body.messages[0]?.from_address}<br />
            <strong>Amount:</strong>{" "}
            {tx.tx.body.messages[0]?.amount?.map(a => `${a.amount} ${a.denom}`).join(", ")}
          </li>
        ))}
      </ul>
    </div>
  );
}
